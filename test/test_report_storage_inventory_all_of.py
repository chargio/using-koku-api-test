# coding: utf-8

"""
    Cost Management

    The API for Cost Management.  You can find out more about     Cost Management at [https://github.com/project-koku/](https://github.com/project-koku/).  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.report_storage_inventory_all_of import ReportStorageInventoryAllOf  # noqa: E501
from openapi_client.rest import ApiException

class TestReportStorageInventoryAllOf(unittest.TestCase):
    """ReportStorageInventoryAllOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ReportStorageInventoryAllOf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.report_storage_inventory_all_of.ReportStorageInventoryAllOf()  # noqa: E501
        if include_optional :
            return ReportStorageInventoryAllOf(
                data = [
                    [[{"date":"2018-07","accounts":[{"account":"4418636104713","values":[{"date":"2018-07","account":"4418636104713","usage":{"value":1826.74238146924,"units":"GB-Mo"},"infrastructure_cost":{"value":33,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":55,"units":"USD"}}]},{"account":"8577742690384","values":[{"date":"2018-07","account":"8577742690384","usage":{"value":1137.74036198065,"units":"GB-Mo"},"infrastructure_cost":{"value":13,"units":"USD"},"derived_cost":{"value":12,"units":"USD"},"cost":{"value":25,"units":"USD"}}]},{"account":"3474227945050","values":[{"date":"2018-07","account":"3474227945050","usage":{"value":1045.80659412797,"units":"GB-Mo"},"infrastructure_cost":{"value":30,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":52,"units":"USD"}}]},{"account":"7249815104968","values":[{"date":"2018-07","account":"7249815104968","usage":{"value":807.326470618818,"units":"GB-Mo"},"infrastructure_cost":{"value":3,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":25,"units":"USD"}}]},{"account":"9420673783214","values":[{"date":"2018-07","account":"9420673783214","usage":{"value":658.306642830709,"units":"GB-Mo"},"infrastructure_cost":{"value":133,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":155,"units":"USD"}}]}]}]]
                    ]
            )
        else :
            return ReportStorageInventoryAllOf(
                data = [
                    [[{"date":"2018-07","accounts":[{"account":"4418636104713","values":[{"date":"2018-07","account":"4418636104713","usage":{"value":1826.74238146924,"units":"GB-Mo"},"infrastructure_cost":{"value":33,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":55,"units":"USD"}}]},{"account":"8577742690384","values":[{"date":"2018-07","account":"8577742690384","usage":{"value":1137.74036198065,"units":"GB-Mo"},"infrastructure_cost":{"value":13,"units":"USD"},"derived_cost":{"value":12,"units":"USD"},"cost":{"value":25,"units":"USD"}}]},{"account":"3474227945050","values":[{"date":"2018-07","account":"3474227945050","usage":{"value":1045.80659412797,"units":"GB-Mo"},"infrastructure_cost":{"value":30,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":52,"units":"USD"}}]},{"account":"7249815104968","values":[{"date":"2018-07","account":"7249815104968","usage":{"value":807.326470618818,"units":"GB-Mo"},"infrastructure_cost":{"value":3,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":25,"units":"USD"}}]},{"account":"9420673783214","values":[{"date":"2018-07","account":"9420673783214","usage":{"value":658.306642830709,"units":"GB-Mo"},"infrastructure_cost":{"value":133,"units":"USD"},"derived_cost":{"value":22,"units":"USD"},"cost":{"value":155,"units":"USD"}}]}]}]]
                    ],
        )

    def testReportStorageInventoryAllOf(self):
        """Test ReportStorageInventoryAllOf"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
