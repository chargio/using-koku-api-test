# coding: utf-8

"""
    Cost Management

    The API for Project Koku and OpenShift cost management. You can find out more about Cost Management at [https://github.com/project-koku/](https://github.com/project-koku/).  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.provider_out import ProviderOut  # noqa: E501
from openapi_client.rest import ApiException

class TestProviderOut(unittest.TestCase):
    """ProviderOut unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ProviderOut
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.provider_out.ProviderOut()  # noqa: E501
        if include_optional :
            return ProviderOut(
                name = 'My Company AWS production', 
                type = 'AWS', 
                uuid = '57e60f90-8c0c-4bd1-87a0-2143759aae1c', 
                authentication = null, 
                billing_source = null, 
                customer = null, 
                created_by = null, 
                stats = {"Mon Dec 31 2018 19:00:00 GMT-0500 (Eastern Standard Time)":[{"assembly_id":"f0d262ff-cc93-449c-a834-74c4d958d45f","billing_period_start":"2019-01-01T00:00:00.000Z","files_processed":"1/1","last_process_start_date":"2019-01-07T21:50:58.000Z","last_process_complete_date":"2019-01-07T21:51:01.000Z","summary_data_creation_datetime":"2019-01-07T21:51:32.000Z","summary_data_updated_datetime":"2019-01-07T21:51:32.000Z"}]}, 
                infrastructure = 'AWS', 
                active = True, 
                cost_models = [
                    openapi_client.models.provider_out_all_of_cost_models.ProviderOut_allOf_cost_models(
                        uuid = 'd823a725-dc10-496a-af08-12533e4f8fe4', 
                        name = 'My Great Cost Model', )
                    ]
            )
        else :
            return ProviderOut(
                name = 'My Company AWS production',
                type = 'AWS',
                uuid = '57e60f90-8c0c-4bd1-87a0-2143759aae1c',
                authentication = null,
                billing_source = null,
                customer = null,
                created_by = null,
        )

    def testProviderOut(self):
        """Test ProviderOut"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
